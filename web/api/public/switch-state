#! /usr/bin/perl
# vim:ts=8:sw=8

use lib '/opt/gondul/include';
use nms::web qw (%json finalize_output);
use strict;
use warnings;
use Data::Dumper;

#my $target = $ENV{REQUEST_URI};
#$target =~ s/$ENV{SCRIPT_NAME}//;
#$target =~ s/^\///;
#my ($switch, $port) = split(/\//,$target,2);
my $port;
my  $switch;
my $q;

#if (!defined($switch)) {
	$q = $nms::web::dbh->prepare('select sysname,extract(epoch from date_trunc(\'second\',time)) as time,data from snmp natural join switches where id in (select max(id) from snmp where ' . $nms::web::when . '  group by switch) and  switches.deleted = \'f\' and not switches.tags \?& array[\'ignoreswitchstate\'];');
#} else {
#	$q = $nms::web::dbh->prepare('select sysname,extract(epoch from date_trunc(\'second\',time)) as time,data from snmp natural join switches where id in (select max(id) from snmp where ' . $nms::web::when . 'group by switch) and sysname = ' . $nms::web::dbh->quote($switch) . ';');
#}

$q->execute();
while ( my $ref = $q->fetchrow_hashref() ) {
	my $sysname = $ref->{'sysname'};

	my %data = %{JSON::XS::decode_json($ref->{'data'})};

	$json{'switches'}{$sysname}{'clients'}{'live'} = 0;
	$json{'then'}{$sysname}{'clients'}{'live'} = 0;
	for my $porti (keys %{$data{'ports'}}) {
		if (defined($port) and $port ne "" and $port ne $porti) {
			next;
		}
		my %port = %{$data{'ports'}{$porti}};
		my $smallport = $porti;
		if ($porti =~ m/\.0$/) {
			next;
		}
		if ($data{'ports'}{$porti}{'ifAlias'} =~ m/C:/i) {
			$smallport =~ s/[0-9-].*$//;
		} else {
			$json{'switches'}{$sysname}{ifs}{$smallport}{'ifAlias'} = $port{'ifAlias'};
		}
		if ($data{'ports'}{$porti}{'ifType'} ne "propVirtual" and
		    $data{'ports'}{$porti}{'ifAlias'} =~ m/G:/i) {
			if ($port{'ifAdminStatus'} eq "up") {
				$json{'switches'}{$sysname}{'uplinks'}{'ifHCInOctets'} += $port{'ifHCInOctets'};
				$json{'switches'}{$sysname}{'uplinks'}{'ifHCOutOctets'} += $port{'ifHCOutOctets'};
				if ($port{'ifOperStatus'} eq "up") {
					$json{'switches'}{$sysname}{'uplinks'}{'live'} += 1;
				}
				$json{'switches'}{$sysname}{'uplinks'}{'total'} += 1;
			}
		}
		if ($data{'ports'}{$porti}{'ifType'} ne "propVirtual" and
		    $data{'ports'}{$porti}{'ifAlias'} =~ m/C:/i) {
			if ($port{'ifAdminStatus'} eq "up") {
				$json{'switches'}{$sysname}{'clients'}{'ifHCInOctets'} += $port{'ifHCInOctets'};
				$json{'switches'}{$sysname}{'clients'}{'ifHCOutOctets'} += $port{'ifHCOutOctets'};
				if ($port{'ifOperStatus'} eq "up") {
					$json{'switches'}{$sysname}{'clients'}{'live'} += 1;
				}
				$json{'switches'}{$sysname}{'clients'}{'total'} += 1;
			}
		}
		$json{'switches'}{$sysname}{ifs}{$smallport}{'ifHCInOctets'} += $port{'ifHCInOctets'} || 0;
		$json{'switches'}{$sysname}{ifs}{$smallport}{'ifHCOutOctets'} += $port{'ifHCOutOctets'} || 0;
		if ($smallport ne "loopback") {
			$json{'switches'}{$sysname}{totals}{'ifHCInOctets'} += $port{'ifHCInOctets'} || 0;
			$json{'switches'}{$sysname}{totals}{'ifHCOutOctets'} += $port{'ifHCOutOctets'} || 0;
		}
		if ($port{'ifOperStatus'} eq "up") {
			$json{'switches'}{$sysname}{ifs}{$smallport}{'live'} += 1;
			$json{'switches'}{$sysname}{totals}{'live'} += 1;
		}
		$json{'switches'}{$sysname}{totals}{'total'} += 1;
	}

	$json{'switches'}{$sysname}{vcp}{jnxVirtualChassisPortInOctets} = $data{'vcp'}{'jnxVirtualChassisPortInOctets'};
	$json{'switches'}{$sysname}{vcp}{jnxVirtualChassisPortOutOctets} = $data{'vcp'}{'jnxVirtualChassisPortOutOctets'};
	$json{'switches'}{$sysname}{'temp'} = $data{'misc'}{'jnxOperatingTemp'}{'7.1.0.0'} || $data{'misc'}{'ciscoEnvMonTemperatureStatusValue'}{'1011'} || $data{'misc'}{'ciscoEnvMonTemperatureStatusValue'}{'1008'};
	$json{'switches'}{$sysname}{'time'} = $ref->{'time'};
}

nms::web::setwhen('15m','10m');
my $q2;
if (!defined($switch)) {
	$q2 = $nms::web::dbh->prepare('select sysname,extract(epoch from date_trunc(\'second\',time)) as time,data from snmp natural join switches where id in (select max(id) from snmp where ' . $nms::web::when . '  group by switch) and  switches.deleted = \'f\' and not switches.tags \?& array[\'ignoreswitchstate\'];');
} else {
	$q2 = $nms::web::dbh->prepare('select sysname,extract(epoch from date_trunc(\'second\',time)) as time,data from snmp natural join switches where id in (select max(id) from snmp where ' . $nms::web::when . 'group by switch) and switches.deleted = \'f\' and not switches.tags \?& array[\'ignoreswitchstate\'] and sysname = ' . $nms::web::dbh->quote($switch) . ';');
}

$q2->execute();
while ( my $ref = $q2->fetchrow_hashref() ) {
	my $sysname = $ref->{'sysname'};

	my %data = %{JSON::XS::decode_json($ref->{'data'})};

	for my $porti (keys %{$data{'ports'}}) {
		if (defined($port) and $port ne "" and $port ne $porti) {
			next;
		}
		my %port = %{$data{'ports'}{$porti}};
		my $smallport = $porti;
		if ($porti =~ m/\.0$/) {
			next;
		}
		if ($data{'ports'}{$porti}{'ifAlias'} =~ m/C:/i) {
			$smallport =~ s/[0-9-].*$//;
		} else {
			$json{'then'}{$sysname}{ifs}{$smallport}{'ifAlias'} = $port{'ifAlias'};
		}
		if ($data{'ports'}{$porti}{'ifType'} ne "propVirtual" and
		    $data{'ports'}{$porti}{'ifAlias'} =~ m/G:/i) {
			if ($port{'ifAdminStatus'} eq "up") {
				$json{'then'}{$sysname}{'uplinks'}{'ifHCInOctets'} += $port{'ifHCInOctets'};
				$json{'then'}{$sysname}{'uplinks'}{'ifHCOutOctets'} += $port{'ifHCOutOctets'};
				if ($port{'ifOperStatus'} eq "up") {
					$json{'then'}{$sysname}{'uplinks'}{'live'} += 1;
				}
				$json{'then'}{$sysname}{'uplinks'}{'total'} += 1;
			}
		}
		if ($data{'ports'}{$porti}{'ifType'} ne "propVirtual" and
		    $data{'ports'}{$porti}{'ifAlias'} =~ m/C:/i) {
			if ($port{'ifAdminStatus'} eq "up") {
				$json{'then'}{$sysname}{'clients'}{'ifHCInOctets'} += $port{'ifHCInOctets'};
				$json{'then'}{$sysname}{'clients'}{'ifHCOutOctets'} += $port{'ifHCOutOctets'};
				if ($port{'ifOperStatus'} eq "up") {
					$json{'then'}{$sysname}{'clients'}{'live'} += 1;
				}
				$json{'then'}{$sysname}{'clients'}{'total'} += 1;
			}
		}

		$json{'then'}{$sysname}{ifs}{$smallport}{'ifHCInOctets'} += $port{'ifHCInOctets'} || 0;
		$json{'then'}{$sysname}{ifs}{$smallport}{'ifHCOutOctets'} += $port{'ifHCOutOctets'} || 0;
		$json{'then'}{$sysname}{totals}{'ifHCInOctets'} += $port{'ifHCInOctets'} || 0;
		$json{'then'}{$sysname}{totals}{'ifHCOutOctets'} += $port{'ifHCOutOctets'} || 0;
		if ($port{'ifOperStatus'} eq "up") {
			$json{'then'}{$sysname}{ifs}{$smallport}{'live'} += 1;
			$json{'then'}{$sysname}{totals}{'live'} += 1;
		}
		$json{'then'}{$sysname}{totals}{'total'} += 1;
	}
	$json{'then'}{$sysname}{vcp}{jnxVirtualChassisPortInOctets} = $data{'vcp'}{'jnxVirtualChassisPortInOctets'};
	$json{'then'}{$sysname}{vcp}{jnxVirtualChassisPortOutOctets} = $data{'vcp'}{'jnxVirtualChassisPortOutOctets'};
	$json{'then'}{$sysname}{'temp'} = $data{'misc'}{'jnxOperatingTemp'}{'7.1.0.0'} || $data{'misc'}{'ciscoEnvMonTemperatureStatusValue'}{'1011'} || $data{'misc'}{'ciscoEnvMonTemperatureStatusValue'}{'1008'};
	$json{'then'}{$sysname}{'time'} = $ref->{'time'};
}
$nms::web::cc{'max-age'} = "5";
$nms::web::cc{'stale-while-revalidate'} = "30";
finalize_output();

